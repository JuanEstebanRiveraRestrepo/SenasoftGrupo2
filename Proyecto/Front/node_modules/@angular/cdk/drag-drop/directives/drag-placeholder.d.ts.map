{"version":3,"file":"drag-placeholder.d.ts","sources":["drag-placeholder.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { TemplateRef, InjectionToken } from '@angular/core';\r\n/**\r\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\r\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport declare const CDK_DRAG_PLACEHOLDER: InjectionToken<CdkDragPlaceholder<any>>;\r\n/**\r\n * Element that will be used as a template for the placeholder of a CdkDrag when\r\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\r\n */\r\nexport declare class CdkDragPlaceholder<T = any> {\r\n    templateRef: TemplateRef<T>;\r\n    /** Context data to be added to the placeholder template instance. */\r\n    data: T;\r\n    constructor(templateRef: TemplateRef<T>);\r\n}\r\n"]}