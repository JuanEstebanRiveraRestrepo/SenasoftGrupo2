/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
export class HasLimitText {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
    }
    /**
     * @param {?} array
     * @param {?} indexReached
     * @return {?}
     */
    transform(array, indexReached) {
        let /** @type {?} */ found;
        for (let /** @type {?} */ i of array) {
            if (i == indexReached) {
                found = true;
                break;
            }
        }
        return found;
    }
}
HasLimitText.decorators = [
    { type: Pipe, args: [{
                name: 'haslimittext'
            },] },
];
/** @nocollapse */
HasLimitText.ctorParameters = () => [
    { type: FlxUiDatatableService }
];
function HasLimitText_tsickle_Closure_declarations() {
    /** @type {?} */
    HasLimitText.prototype.service;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzTGltaXRUZXh0LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mbHgtdWktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2hhc0xpbWl0VGV4dC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBRTtBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUtwRSxNQUFNOzs7O0lBQ0YsWUFBbUIsT0FBOEI7UUFBOUIsWUFBTyxHQUFQLE9BQU8sQ0FBdUI7S0FBRzs7Ozs7O0lBRXBELFNBQVMsQ0FBQyxLQUFtQixFQUFDLFlBQW1CO1FBQzlDLHFCQUFJLEtBQWMsQ0FBRTtRQUNwQixHQUFHLENBQUEsQ0FBQyxxQkFBSSxDQUFDLElBQUksS0FBSyxDQUFDLENBQUEsQ0FBQztZQUNoQixFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUUsWUFBWSxDQUFDLENBQUEsQ0FBQztnQkFDZixLQUFLLEdBQUcsSUFBSSxDQUFFO2dCQUNkLEtBQUssQ0FBRTthQUNYO1NBQ0o7UUFFRCxNQUFNLENBQUMsS0FBSyxDQUFFO0tBQ2hCOzs7WUFoQkosSUFBSSxTQUFDO2dCQUNGLElBQUksRUFBQyxjQUFjO2FBQ3RCOzs7O1lBSlEscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnIDtcclxuaW1wb3J0IHsgRmx4VWlEYXRhdGFibGVTZXJ2aWNlIH0gZnJvbSAnLi4vZmx4LXVpLWRhdGF0YWJsZS5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6J2hhc2xpbWl0dGV4dCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEhhc0xpbWl0VGV4dCBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm17XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogRmx4VWlEYXRhdGFibGVTZXJ2aWNlKXt9XHJcblxyXG4gICAgdHJhbnNmb3JtKGFycmF5OkFycmF5PG51bWJlcj4saW5kZXhSZWFjaGVkOm51bWJlcik6IGFueXtcclxuICAgICAgIGxldCBmb3VuZDogYm9vbGVhbiA7XHJcbiAgICAgICBmb3IobGV0IGkgb2YgYXJyYXkpe1xyXG4gICAgICAgICAgIGlmKGk9PWluZGV4UmVhY2hlZCl7XHJcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWUgO1xyXG4gICAgICAgICAgICAgICAgYnJlYWsgO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgIH1cclxuXHJcbiAgICAgICByZXR1cm4gZm91bmQgO1xyXG4gICAgfVxyXG59Il19