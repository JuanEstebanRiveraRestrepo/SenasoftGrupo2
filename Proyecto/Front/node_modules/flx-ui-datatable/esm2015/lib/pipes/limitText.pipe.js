/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
export class LimitText {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
    }
    /**
     * @param {?} mainpulationConfig
     * @param {?} text
     * @return {?}
     */
    transform(mainpulationConfig, text) {
        let /** @type {?} */ from = (mainpulationConfig.hasOwnProperty("from")) ? mainpulationConfig['from'] : 0;
        let /** @type {?} */ to = (mainpulationConfig.hasOwnProperty("to")) ? mainpulationConfig["to"] : text.length;
        let /** @type {?} */ appendDots = (mainpulationConfig.hasOwnProperty("appendDots")) ? mainpulationConfig["appendDots"] : "";
        let /** @type {?} */ txt = "";
        if (text.length > to) {
            txt = text.substring(from, to) + appendDots;
        }
        else {
            txt = text;
        }
        return txt;
    }
}
LimitText.decorators = [
    { type: Pipe, args: [{
                name: 'limittext'
            },] },
];
/** @nocollapse */
LimitText.ctorParameters = () => [
    { type: FlxUiDatatableService }
];
function LimitText_tsickle_Closure_declarations() {
    /** @type {?} */
    LimitText.prototype.service;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGltaXRUZXh0LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9mbHgtdWktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2xpbWl0VGV4dC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBRTtBQUNwRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUlwRSxNQUFNOzs7O0lBQ0YsWUFBbUIsT0FBNkI7UUFBN0IsWUFBTyxHQUFQLE9BQU8sQ0FBc0I7S0FFL0M7Ozs7OztJQUVELFNBQVMsQ0FBQyxrQkFBeUIsRUFBQyxJQUFXO1FBQzNDLHFCQUFJLElBQUksR0FBRyxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFFO1FBQ3pGLHFCQUFJLEVBQUUsR0FBRyxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBRTtRQUM3RixxQkFBSSxVQUFVLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBRTtRQUM1RyxxQkFBSSxHQUFHLEdBQVUsRUFBRSxDQUFFO1FBQ3JCLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUMsRUFBRSxDQUFDLENBQUEsQ0FBQztZQUNmLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBQyxFQUFFLENBQUMsR0FBRSxVQUFVLENBQUU7U0FDOUM7UUFBQSxJQUFJLENBQUEsQ0FBQztZQUNGLEdBQUcsR0FBRyxJQUFJLENBQUU7U0FDZjtRQUVELE1BQU0sQ0FBQyxHQUFHLENBQUU7S0FDZjs7O1lBcEJKLElBQUksU0FBQztnQkFDRixJQUFJLEVBQUMsV0FBVzthQUNuQjs7OztZQUhRLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnIDtcclxuaW1wb3J0IHsgRmx4VWlEYXRhdGFibGVTZXJ2aWNlIH0gZnJvbSAnLi4vZmx4LXVpLWRhdGF0YWJsZS5zZXJ2aWNlJztcclxuQFBpcGUoe1xyXG4gICAgbmFtZTonbGltaXR0ZXh0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTGltaXRUZXh0IGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybXtcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBzZXJ2aWNlOkZseFVpRGF0YXRhYmxlU2VydmljZSl7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHRyYW5zZm9ybShtYWlucHVsYXRpb25Db25maWc6T2JqZWN0LHRleHQ6c3RyaW5nKTpzdHJpbmd7XHJcbiAgICAgICAgbGV0IGZyb20gPSAobWFpbnB1bGF0aW9uQ29uZmlnLmhhc093blByb3BlcnR5KFwiZnJvbVwiKSkgPyBtYWlucHVsYXRpb25Db25maWdbJ2Zyb20nXSA6IDAgO1xyXG4gICAgICAgIGxldCB0byA9IChtYWlucHVsYXRpb25Db25maWcuaGFzT3duUHJvcGVydHkoXCJ0b1wiKSkgPyBtYWlucHVsYXRpb25Db25maWdbXCJ0b1wiXSA6IHRleHQubGVuZ3RoIDtcclxuICAgICAgICBsZXQgYXBwZW5kRG90cyA9IChtYWlucHVsYXRpb25Db25maWcuaGFzT3duUHJvcGVydHkoXCJhcHBlbmREb3RzXCIpKSA/IG1haW5wdWxhdGlvbkNvbmZpZ1tcImFwcGVuZERvdHNcIl0gOiBcIlwiIDtcclxuICAgICAgICBsZXQgdHh0OiBzdHJpbmcgPVwiXCIgO1xyXG4gICAgICAgIGlmKHRleHQubGVuZ3RoPnRvKXtcclxuICAgICAgICAgICAgdHh0ID0gdGV4dC5zdWJzdHJpbmcoZnJvbSx0bykrIGFwcGVuZERvdHMgO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0eHQgPSB0ZXh0IDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0eHQgO1xyXG4gICAgfVxyXG59Il19