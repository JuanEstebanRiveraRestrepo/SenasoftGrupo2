/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
var ProcessedData = /** @class */ (function () {
    function ProcessedData(service) {
        this.service = service;
    }
    /**
     * @param {?} dataIndex
     * @return {?}
     */
    ProcessedData.prototype.transform = /**
     * @param {?} dataIndex
     * @return {?}
     */
    function (dataIndex) {
        var /** @type {?} */ isProcessed = false;
        var /** @type {?} */ foundIndex = -1;
        for (var /** @type {?} */ i = 0; i < this.service.processedData.length; i++) {
            if (i == dataIndex) {
                isProcessed = true;
                foundIndex = i;
            }
        }
        if (foundIndex < 0) {
            this.service.processedData.push(dataIndex);
        }
        return isProcessed;
    };
    ProcessedData.decorators = [
        { type: Pipe, args: [{
                    name: 'isprocessed'
                },] },
    ];
    /** @nocollapse */
    ProcessedData.ctorParameters = function () { return [
        { type: FlxUiDatatableService }
    ]; };
    return ProcessedData;
}());
export { ProcessedData };
function ProcessedData_tsickle_Closure_declarations() {
    /** @type {?} */
    ProcessedData.prototype.service;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzc2VkZGF0YS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZmx4LXVpLWRhdGF0YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9wcm9jZXNzZWRkYXRhLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWdCLE1BQU0sZUFBZSxDQUFFO0FBQ3BELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztJQU1oRSx1QkFBbUIsT0FBOEI7UUFBOUIsWUFBTyxHQUFQLE9BQU8sQ0FBdUI7S0FFaEQ7Ozs7O0lBRUQsaUNBQVM7Ozs7SUFBVCxVQUFVLFNBQWdCO1FBQ3RCLHFCQUFJLFdBQVcsR0FBWSxLQUFLLENBQUU7UUFDbEMscUJBQUksVUFBVSxHQUFXLENBQUMsQ0FBQyxDQUFFO1FBQzdCLEdBQUcsQ0FBQSxDQUFDLHFCQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBQyxDQUFDO1lBQ2pELEVBQUUsQ0FBQSxDQUFDLENBQUMsSUFBRSxTQUFTLENBQUMsQ0FBQSxDQUFDO2dCQUNiLFdBQVcsR0FBRyxJQUFJLENBQUU7Z0JBQ3BCLFVBQVUsR0FBRyxDQUFDLENBQUU7YUFDbkI7U0FDSjtRQUVELEVBQUUsQ0FBQSxDQUFDLFVBQVUsR0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDO1lBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFFO1NBQy9DO1FBRUQsTUFBTSxDQUFDLFdBQVcsQ0FBRTtLQUN2Qjs7Z0JBdkJKLElBQUksU0FBQztvQkFDRixJQUFJLEVBQUMsYUFBYTtpQkFDckI7Ozs7Z0JBSlEscUJBQXFCOzt3QkFEOUI7O1NBTWEsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnIDtcclxuaW1wb3J0IHsgRmx4VWlEYXRhdGFibGVTZXJ2aWNlIH0gZnJvbSAnLi4vZmx4LXVpLWRhdGF0YWJsZS5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6J2lzcHJvY2Vzc2VkJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUHJvY2Vzc2VkRGF0YSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm17XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogRmx4VWlEYXRhdGFibGVTZXJ2aWNlKXtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNmb3JtKGRhdGFJbmRleDpudW1iZXIpOiBib29sZWFue1xyXG4gICAgICAgIGxldCBpc1Byb2Nlc3NlZDogYm9vbGVhbiA9IGZhbHNlIDtcclxuICAgICAgICBsZXQgZm91bmRJbmRleDogbnVtYmVyID0gLTEgO1xyXG4gICAgICAgIGZvcihsZXQgaT0wO2k8dGhpcy5zZXJ2aWNlLnByb2Nlc3NlZERhdGEubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGlmKGk9PWRhdGFJbmRleCl7XHJcbiAgICAgICAgICAgICAgICBpc1Byb2Nlc3NlZCA9IHRydWUgO1xyXG4gICAgICAgICAgICAgICAgZm91bmRJbmRleCA9IGkgO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZihmb3VuZEluZGV4PDApeyAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLnNlcnZpY2UucHJvY2Vzc2VkRGF0YS5wdXNoKGRhdGFJbmRleCkgO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGlzUHJvY2Vzc2VkIDtcclxuICAgIH1cclxufSJdfQ==